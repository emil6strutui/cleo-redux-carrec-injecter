:CARRECORD_READCR
0AA7: call_function 0x48DF90 num_params 2 pop 2 "rb" "cleo\\recordings\\carrec.cr" 15@ // file = CFileMgr::Open("cleo\recordings\carrec.cr", "rb");
// Get file size to 14@:
0AA5: call 0x48DEE0 num_params 3 pop 3 2 0 15@ // CFileMgr::Seek(file, 0, SEEK_END);
0AA7: call_function 0x652D50 num_params 1 pop 1 15@ 14@ // size = ftell(file);
// Go to beginning of the file:
0AA5: call 0x48DEE0 num_params 3 pop 3 0 0 15@ // CFileMgr::Seek(file, 0, SEEK_SET);
// Now start reading:
000A: 14@ += 0xFF // just some reserve
0AC8: 13@ = allocate_memory_size 14@
000E: 14@ -= 0xFF
0006: 12@ = 0x00
0085: 11@ = 13@
000A: 11@ += 0x04 // first 4 bytes is reserved for global timer
0A8C: write_memory 11@ size 4 value 14@ virtual_protect 1 // recording file size
000A: 11@ += 0x08 // next 4 bytes is reserved for current frame number

:CARRECORD_READCR_GO2
if
801D:   NOT 12@ > 14@
jf @CARRECORD_READCR_RETURN
0085: 10@ = 11@
005A: 10@ += 12@
0AA5: call 0x48DF50 num_params 3 pop 3 4 10@ 15@ // CFileMgr::Read(file, var_offset, 4);
000A: 12@ += 0x04    
jump @CARRECORD_READCR_GO2

:CARRECORD_READCR_RETURN
0AA5: call 0x48DEA0 num_params 1 pop 1 15@ // CFileMgr::Close(file);
0AB2: ret 1 13@